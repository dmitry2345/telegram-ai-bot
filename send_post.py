import requests
import os

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
TELEGRAM_CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")

def generate_post():
    url = "https://api-inference.huggingface.co/models/mistralai/Mistral-7B-Instruct-v0.2"

    prompt = (
        "–°–æ—Å—Ç–∞–≤—å –∫–æ—Ä–æ—Ç–∫–∏–π –Ω–æ–≤–æ—Å—Ç–Ω–æ–π –ø–æ—Å—Ç –¥–ª—è Telegram-–∫–∞–Ω–∞–ª–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ. "
        "–¢–µ–º–∞ ‚Äî –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –†–æ—Å—Å–∏–∏. –ü–∏—à–∏ –∫—Ä–∞—Ç–∫–æ, –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ, –∏–∑–±–µ–≥–∞–π –æ—Å—Ç—Ä—ã—Ö —Ç–µ–º. "
        "–ü—Ä–∏–º–µ—Ä: üì∞ –í –ú–æ—Å–∫–≤–µ –∑–∞–ø—É—Å—Ç–∏–ª–∏ –Ω–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç —ç–ª–µ–∫—Ç—Ä–æ–±—É—Å–æ–≤. –ü–æ–¥—Ä–æ–±–Ω–µ–µ –≤ –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö."
    )

    headers = {"Content-Type": "application/json"}
    payload = {
        "inputs": f"[INST] {prompt} [/INST]",
        "options": {
            "wait_for_model": True
        }
    }

    response = requests.post(url, headers=headers, json=payload)
    if response.status_code != 200:
        raise Exception(f"–û—à–∏–±–∫–∞ HuggingFace API: {response.status_code} - {response.text}")

    result = response.json()
    if isinstance(result, list) and len(result) > 0:
        return result[0]["generated_text"].strip()
    else:
        raise Exception("–û—Ç–≤–µ—Ç HuggingFace –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")

def send_to_telegram(text):
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
    payload = {
        "chat_id": TELEGRAM_CHAT_ID,
        "text": text,
        "parse_mode": "HTML"
    }
    response = requests.post(url, data=payload)
    if not response.ok:
        raise Exception(f"–û—à–∏–±–∫–∞ Telegram API: {response.text}")

def main():
    post = generate_post()
    send_to_telegram(post)

if __name__ == "__main__":
    main()
