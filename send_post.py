import requests
import os

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
TELEGRAM_CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")
HF_TOKEN = os.getenv("HF_TOKEN")

def generate_post():
    url = "https://api-inference.huggingface.co/models/mistralai/Mistral-7B-Instruct-v0.2"

    prompt = (
        "–ù–∞–ø–∏—à–∏ –∫–æ—Ä–æ—Ç–∫—É—é, –ø–æ–∑–∏—Ç–∏–≤–Ω—É—é, –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é –Ω–æ–≤–æ—Å—Ç—å –∏–∑ –†–æ—Å—Å–∏–∏ –≤ —Å—Ç–∏–ª–µ Telegram-–ø–æ—Å—Ç–∞. "
        "–¢–µ–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω–æ–π, –±–µ–∑ –ø–æ–ª–∏—Ç–∏–∫–∏, —Å —ç–º–æ–¥–∑–∏ –∏ –ª—ë–≥–∫–∏–º —é–º–æ—Ä–æ–º. –ü—Ä–∏–º–µ—Ä:\n\n"
        "üöÄ –í –ö–∞–∑–∞–Ω–∏ —à–∫–æ–ª—å–Ω–∏–∫–∏ —Å–æ–±—Ä–∞–ª–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é —Ä–∞–∫–µ—Ç—É –Ω–∞ —É—Ä–æ–∫–µ —Ç—Ä—É–¥–∞. –£–∂–µ –ø–ª–∞–Ω–∏—Ä—É—é—Ç –∑–∞–ø—É—Å–∫!"
    )

    headers = {
        "Authorization": f"Bearer {HF_TOKEN}",
        "Content-Type": "application/json"
    }

    payload = {
        "inputs": f"[INST] {prompt} [/INST]",
        "options": {
            "wait_for_model": True
        }
    }

    response = requests.post(url, headers=headers, json=payload)
    if response.status_code != 200:
        raise Exception(f"–û—à–∏–±–∫–∞ HuggingFace API: {response.status_code} - {response.text}")

    data = response.json()
    if isinstance(data, list) and "generated_text" in data[0]:
        return data[0]["generated_text"].strip()
    else:
        raise Exception("–ù–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç HuggingFace API")

def send_to_telegram(text):
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
    payload = {
        "chat_id": TELEGRAM_CHAT_ID,
        "text": text,
        "parse_mode": "HTML"
    }

    response = requests.post(url, data=payload)
    if not response.ok:
        raise Exception(f"–û—à–∏–±–∫–∞ Telegram API: {response.text}")

def main():
    post = generate_post()
    send_to_telegram(post)

if __name__ == "__main__":
    main()
