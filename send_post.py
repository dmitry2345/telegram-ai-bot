import os
import datetime
import requests
import feedparser
import random

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
TELEGRAM_CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")

RSS_FEEDS = [
    "https://habr.com/ru/rss/",
    "https://vc.ru/rss/all",
    "https://rssexport.rbc.ru/rbcnews/news/30/full.rss"
]

# –°—Ç–æ–ø-—Å–ª–æ–≤–∞ (–º–æ–∂–Ω–æ –¥–æ–ø–æ–ª–Ω—è—Ç—å)
BANNED_KEYWORDS = [
    "–£–∫—Ä–∞–∏–Ω–∞", "–ü—É—Ç–∏–Ω", "–º–æ–±–∏–ª–∏–∑–∞—Ü–∏—è", "–≤–∑—Ä—ã–≤", "—Ç–µ—Ä–∞–∫—Ç", "–±–æ–µ–≤—ã–µ –¥–µ–π—Å—Ç–≤–∏—è",
    "–õ–ì–ë–¢", "—Å–º–µ—Ä—Ç—å", "—É–±–∏–π—Å—Ç–≤–æ", "–Ω–∞—Å–∏–ª–∏–µ", "–ø—Ä–æ—Ç–µ—Å—Ç", "–ø–æ–ª–∏—Ç–∏–∫–∞", "—Å–∞–Ω–∫—Ü–∏–∏",
    "–ù–∞–≤–∞–ª—å–Ω—ã–π", "–°–í–û", "—Å–ø–µ—Ü–æ–ø–µ—Ä–∞—Ü–∏—è", "—ç–∫—Å—Ç—Ä–µ–º–∏–∑–º", "–ú–ò–î", "–ú–∏–Ω–æ–±–æ—Ä–æ–Ω—ã"
]

def is_safe(title):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã—Ö —Å–ª–æ–≤."""
    lower_title = title.lower()
    for word in BANNED_KEYWORDS:
        if word.lower() in lower_title:
            return False
    return True

def get_safe_news():
    today = datetime.date.today().strftime("%d.%m.%Y")
    message = f"<b>–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –Ω–∞ {today}:</b>\n\n"

    entries = []
    for url in RSS_FEEDS:
        feed = feedparser.parse(url)
        entries.extend(feed.entries)

    unique_titles = set()
    filtered_news = []

    for entry in entries:
        title = entry.title.strip()
        link = entry.link
        if title not in unique_titles and is_safe(title):
            unique_titles.add(title)
            filtered_news.append(f"üîπ <a href='{link}'>{title}</a>")

    if not filtered_news:
        return f"<b>–ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–∞ {today}</b>\n–í—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω—ã –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏."

    random.shuffle(filtered_news)
    message += "\n".join(filtered_news[:5])
    message += "\n\n<i>–ò—Å—Ç–æ—á–Ω–∏–∫: –•–∞–±—Ä, VC.ru, –†–ë–ö</i>"
    return message

def send_to_telegram(text):
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
    payload = {
        "chat_id": TELEGRAM_CHAT_ID,
        "text": text,
        "parse_mode": "HTML",
        "disable_web_page_preview": False
    }
    response = requests.post(url, data=payload)
    if not response.ok:
        raise Exception(f"–û—à–∏–±–∫–∞ Telegram API: {response.text}")

def main():
    news = get_safe_news()
    send_to_telegram(news)

if __name__ == "__main__":
    main()
